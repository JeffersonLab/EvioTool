<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=us-ascii">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 14">
<meta name=Originator content="Microsoft Word 14">
<link rel=File-List href="examples_files/filelist.xml">
<link rel=Edit-Time-Data href="examples_files/editdata.mso">
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style>
<![endif]-->
<title>Examples</title>
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Carl Timmer</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Carl Timmer</o:LastAuthor>
  <o:Revision>9</o:Revision>
  <o:TotalTime>11</o:TotalTime>
  <o:Created>2014-01-23T17:00:00Z</o:Created>
  <o:LastSaved>2014-01-23T17:11:00Z</o:LastSaved>
  <o:Pages>4</o:Pages>
  <o:Words>1538</o:Words>
  <o:Characters>8770</o:Characters>
  <o:Company>Jefferson Lab</o:Company>
  <o:Lines>73</o:Lines>
  <o:Paragraphs>20</o:Paragraphs>
  <o:CharactersWithSpaces>10288</o:CharactersWithSpaces>
  <o:Version>14.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="examples_files/themedata.thmx">
<link rel=colorSchemeMapping href="examples_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:Zoom>103</w:Zoom>
  <w:SpellingState>Clean</w:SpellingState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SplitPgBreakAndParaMark/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="true"
  DefSemiHidden="true" DefQFormat="false" DefPriority="99"
  LatentStyleCount="267">
  <w:LsdException Locked="false" Priority="0" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" Name="toc 9"/>
  <w:LsdException Locked="false" Priority="35" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" Priority="10" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" Priority="1" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" Priority="11" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" Priority="22" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" Priority="59" SemiHidden="false"
   UnhideWhenUsed="false" Name="Table Grid"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" UnhideWhenUsed="false" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" SemiHidden="false"
   UnhideWhenUsed="false" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" SemiHidden="false"
   UnhideWhenUsed="false" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" SemiHidden="false"
   UnhideWhenUsed="false" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" SemiHidden="false"
   UnhideWhenUsed="false" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" SemiHidden="false"
   UnhideWhenUsed="false" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" QFormat="true" Name="TOC Heading"/>
 </w:LatentStyles>
</xml><![endif]-->
<link rel=Stylesheet type="text/css" media=all href=etmanual.css>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:-520081665 -1073717157 41 0 66047 0;}
@font-face
	{font-family:Consolas;
	panose-1:2 11 6 9 2 2 4 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:modern;
	mso-font-pitch:fixed;
	mso-font-signature:-520092929 1073806591 9 0 415 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 1 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	text-indent:-.5in;
	mso-pagination:widow-orphan;
	mso-outline-level:1;
	font-size:21.5pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h3
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 3 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	text-indent:-.25in;
	mso-pagination:widow-orphan;
	mso-outline-level:3;
	font-size:17.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h4
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 4 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	mso-outline-level:4;
	font-size:14.5pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;}
h5
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 5 Char";
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	mso-outline-level:5;
	font-size:13.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	font-weight:bold;
	font-style:italic;}
p
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
code
	{mso-style-noshow:yes;
	mso-style-priority:99;
	font-family:"Courier New";
	mso-ascii-font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:"Courier New";
	mso-bidi-font-family:"Courier New";}
pre
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"HTML Preformatted Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:1.2in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	tab-stops:45.8pt 91.6pt 137.4pt 183.2pt 229.0pt 274.8pt 320.6pt 366.4pt 412.2pt 458.0pt 503.8pt 549.6pt 595.4pt 641.2pt 687.0pt 732.8pt;
	font-size:10.0pt;
	font-family:"Courier New";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-link:"Balloon Text Char";
	margin:0in;
	margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 1";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#365F91;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-weight:bold;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 3";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 4";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#4F81BD;
	mso-themecolor:accent1;
	font-weight:bold;
	font-style:italic;}
span.Heading5Char
	{mso-style-name:"Heading 5 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 5";
	mso-ansi-font-size:12.0pt;
	mso-bidi-font-size:12.0pt;
	font-family:"Cambria","serif";
	mso-ascii-font-family:Cambria;
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Cambria;
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#243F60;
	mso-themecolor:accent1;
	mso-themeshade:127;}
span.HTMLPreformattedChar
	{mso-style-name:"HTML Preformatted Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"HTML Preformatted";
	font-family:Consolas;
	mso-ascii-font-family:Consolas;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Consolas;
	mso-bidi-font-family:Consolas;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Balloon Text";
	mso-ansi-font-size:8.0pt;
	mso-bidi-font-size:8.0pt;
	font-family:"Tahoma","sans-serif";
	mso-ascii-font-family:Tahoma;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:minor-fareast;
	mso-hansi-font-family:Tahoma;
	mso-bidi-font-family:Tahoma;}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	font-size:10.0pt;
	mso-ansi-font-size:10.0pt;
	mso-bidi-font-size:10.0pt;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin:0in;
	mso-para-margin-bottom:.0001pt;
	mso-pagination:widow-orphan;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
</style>
<![endif]-->
<meta name=author content="Carl Timmer">
<meta name=description content="Chapter for ET system manual">
<meta name=copyright content="Copyright 1999, SURA, TJNAF">
<!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body bgcolor=white background=FlowBack.gif lang=EN-US link=blue vlink=purple
style='tab-interval:.5in'>

<div class=WordSection1>

<h1><a href="programming_details.htm" target="_self"><span style='mso-fareast-font-family:
"Times New Roman";mso-no-proof:yes;text-decoration:none;text-underline:none'><img
border=0 width=31 height=31 id="_x0000_i1028" src=left.gif alt=Previous></span></a><a
href="modifying_system.htm" target="_self"><span style='mso-fareast-font-family:
"Times New Roman";mso-no-proof:yes;text-decoration:none;text-underline:none'><img
border=0 width=31 height=31 id="_x0000_i1027" src=right.gif alt=Next></span></a><span
style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h1>

<h1><span style='mso-fareast-font-family:"Times New Roman"'>Examples<o:p></o:p></span></h1>

<h3><a name=Producer><span style='mso-fareast-font-family:"Times New Roman"'>Event
Producer</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>An example of a program written to produce events for an ET system is
adapted from the file <em>et_producer1.</em>c. It follows below:</p>

<p><span style='font-size:10.0pt;font-family:"Courier New"'>#include &lt;<span
class=SpellE>stdio.h</span>&gt;<br>
#include &lt;<span class=SpellE>stdlib.h</span>&gt;<br>
#include &lt;<span class=SpellE>string.h</span>&gt;<br>
#include &lt;<span class=SpellE>signal.h</span>&gt;<br>
#include &lt;sys/<span class=SpellE>types.h</span>&gt;<br>
#include &lt;<span class=SpellE>unistd.h</span>&gt;<br>
#include &lt;<span class=SpellE>time.h</span>&gt;<br>
#include &lt;<span class=SpellE>limits.h</span>&gt;<br>
#include &lt;<span class=SpellE>et.h</span>&gt;<br>
&nbsp;<br>
#define NUMLOOPS 20000<br>
#define CHUNK 10<br>
&nbsp;<br>
main(<span class=SpellE>int</span> <span class=SpellE>argc,char</span> **<span
class=SpellE>argv</span>)<br>
{ <br>
<span class=SpellE>int</span> <span class=SpellE>i</span>, j, size, status;<br>
<span class=SpellE>int</span> <span class=SpellE>freq</span>, <span
class=SpellE>freq_tot</span>=0, <span class=SpellE>freq_avg</span>,
iterations=1, count;<br>
<span class=SpellE>et_att_id</span> attach1;<br>
<span class=SpellE>et_sys_id</span> id;<br>
<span class=SpellE>et_openconfig</span> <span class=SpellE>openconfig</span>;<br>
<span class=SpellE>et_event</span> *<span class=SpellE>pe</span>[CHUNK];<br>
<span class=SpellE>struct</span> <span class=SpellE>timespec</span> t1, t2;<br>
double time;<br>
<br>
<span style='color:red'>/* handy data for testing */</span><br>
<span class=SpellE>int</span> numbers[] = {0,1,2,3,4,5,6,7,8,9};<br>
char *stuff[] =
{&quot;One&quot;,&quot;Two&quot;,&quot;Three&quot;,&quot;Four&quot;,&quot;Five&quot;,&quot;Six&quot;,&quot;Seven&quot;,&quot;Eight&quot;,&quot;Nine&quot;,&quot;Ten&quot;};<br>
<span class=SpellE>int</span> control[] = {17,8,-1,-1}; /* 17 &amp; 8 are
arbitrary numbers */<br>
<br>
<span style='color:red'>/* pass the ET filename and event size on command line
*/</span> <br>
if ((<span class=SpellE>argc</span> != 2) &amp;&amp; (<span class=SpellE>argc</span>
!= 3)) {<br>
&nbsp; <span class=SpellE>printf</span>(&quot;Usage: <span class=SpellE>et_producer</span>
&lt;<span class=SpellE>et_filename</span>&gt; [&lt;<span class=SpellE>eventsize</span>&gt;]\n&quot;);<br>
&nbsp; exit(1);<br>
}<br>
size = 10;<br>
if (<span class=SpellE>argc</span> == 3) {<br>
&nbsp; size = <span class=SpellE>atoi</span>(<span class=SpellE>argv</span>[2]);<br>
}<br>
<br>
<span style='color:red'>/* open local ET system and don't wait for it */</span><br>
<span class=SpellE>et_open_config_init</span>(&amp;<span class=SpellE>openconfig</span>);<br>
if (<span class=SpellE>et_open</span>(&amp;id, <span class=SpellE>argv</span>[1],
<span class=SpellE>openconfig</span>) != ET_OK) {<br>
&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_producer</span>:
<span class=SpellE>et_open</span> problems\n&quot;);<br>
&nbsp; exit(1);<br>
}<br>
<span class=SpellE>et_open_config_destroy</span>(<span class=SpellE>openconfig</span>);<br>
<br>
<span style='color:red'>/* set level of debug output (everything) */</span><br>
<span class=SpellE>et_system_setdebug</span>(id, ET_DEBUG_INFO);<br>
<br>
<span style='color:red'>/* attach to <span class=SpellE>grandcentral</span>
station */</span><br>
if (<span class=SpellE>et_station_attach</span>(id, ET_GRANDCENTRAL,
&amp;attach1) &lt; 0) {<br>
&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_producer</span>:
error in station attach\n&quot;);<br>
&nbsp; exit(1);<br>
}<br>
<br>
<span style='color:red'>/* while the ET system is alive, do the following loop
*/</span><br>
while (<span class=SpellE>et_alive</span>(id)) {<br>
<br>
&nbsp; <span style='color:red'>/* read time for future statistics calculations
*/</span><br>
&nbsp; <span class=SpellE>clock_gettime</span>(CLOCK_REALTIME, &amp;t1);<br>
<br>
&nbsp; <span style='color:red'>/* loop NUMLOOPS times before printing out
statistics */</span><br>
&nbsp; for (j=0; j &lt; NUMLOOPS ; j++) {<br>
&nbsp;&nbsp;&nbsp; <span style='color:red'>/* get CHUNK new events at a time */</span><br>
&nbsp;&nbsp;&nbsp; count = 0;<br>
&nbsp;&nbsp;&nbsp; status = <span class=SpellE>et_events_new</span>(id,
attach1, <span class=SpellE>pe</span>, ET_SLEEP, NULL, size, CHUNK,
&amp;count);<br>
&nbsp;&nbsp;&nbsp; if (status == 0) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:red'>/* everything is OK */</span>;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; else if (status == ET_ERROR_DEAD) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_producer</span>: ET is dead\n&quot;);<br>
&nbsp;&nbsp;&nbsp; &nbsp; break;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; else if (status == ET_ERROR_TIMEOUT) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_producer</span>: got timeout\n&quot;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; else if (status == ET_ERROR_EMPTY) {<br>
&nbsp;&nbsp;&nbsp; &nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_producer</span>: no events\n&quot;);<br>
&nbsp;&nbsp;&nbsp; &nbsp; break;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; else if (status == ET_ERROR_BUSY) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_producer</span>: <span class=SpellE>grandcentral</span> is
busy\n&quot;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; else if (status == ET_ERROR_WAKEUP) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_producer</span>: someone told me to wake up\n&quot;);<br>
&nbsp;&nbsp;&nbsp; &nbsp; break;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; else if (status != ET_OK) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_producer</span>: request error\n&quot;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> error;<br>
&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; <span style='color:red'>/* write data, set priority, set
control values here */</span><br>
&nbsp;&nbsp;&nbsp; if (1) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; void *<span class=SpellE>pdata</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (<span class=SpellE>i</span>=0; <span
class=SpellE>i</span> &lt; count; <span class=SpellE>i</span>++) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style='color:red'>/* allow <span
class=SpellE>et_client</span> modes 3 &amp; 4 to work (see <span class=SpellE><i>et_client.c</i></span>
below) */</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>et_event_setcontrol</span>(<span
class=SpellE>pe</span>[<span class=SpellE>i</span>], control, 4);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>et_event_getdata</span>(<span
class=SpellE>pe</span>[<span class=SpellE>i</span>], &amp;<span class=SpellE>pdata</span>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>memcpy</span>(<span
class=SpellE>pdata</span>, (<span class=SpellE>const</span> void *)
&amp;numbers[<span class=SpellE>i</span>], <span class=SpellE>sizeof</span>(<span
class=SpellE>int</span>));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>et_event_setlength</span>(<span
class=SpellE>pe</span>[<span class=SpellE>i</span>], <span class=SpellE>sizeof</span>(<span
class=SpellE>int</span>));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; <span style='color:red'>/* put events back into the ET
system */</span><br>
&nbsp;&nbsp;&nbsp; status = <span class=SpellE>et_events_put</span>(id,
attach1, <span class=SpellE>pe</span>, count);<br>
&nbsp;&nbsp;&nbsp; if (status == ET_OK) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; else if (status == ET_ERROR_DEAD) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_producer</span>: put, ET is dead\n&quot;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; else if (status != ET_OK) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_producer</span>: put error\n&quot;);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> error;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp; } <span style='color:red'>/* for NUMLOOPS */</span><br>
<br>
&nbsp; <span style='color:red'>/* calculate and printout event rates */</span><br>
&nbsp; <span class=SpellE>clock_gettime</span>(CLOCK_REALTIME, &amp;t2);<br>
&nbsp; time = (double)(t2.tv_sec - t1.tv_sec) + 1.e-9*(t2.tv_nsec -
t1.tv_nsec);<br>
&nbsp; <span class=SpellE>freq</span> = (count*NUMLOOPS)/time;<br>
&nbsp; <span style='color:red'>/* if numbers get too big, start over */</span><br>
&nbsp; if ((INT_MAX - <span class=SpellE>freq_tot</span>) &lt; <span
class=SpellE>freq</span>) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>freq_tot</span> = 0;<br>
&nbsp;&nbsp;&nbsp; iterations = 1;<br>
&nbsp; }<br>
&nbsp; <span class=SpellE>freq_tot</span> += <span class=SpellE>freq</span>;<br>
&nbsp; <span class=SpellE>freq_avg</span> = <span class=SpellE>freq_tot</span>/iterations;<br>
&nbsp; iterations++;<br>
&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_producer</span>:
%d Hz, %d Hz Avg.\n&quot;, <span class=SpellE>freq</span>, <span class=SpellE>freq_avg</span>);<br>
<br>
} <span style='color:red'>/* end of while(alive)loop */</span><br>
<br>
error:<br>
<span class=SpellE>printf</span>(&quot;<span class=SpellE>et_producer</span>:
ERROR\n&quot;);<br>
exit(0);<br>
}<o:p></o:p></span></p>

<h3><a name=Consumer><span style='mso-fareast-font-family:"Times New Roman"'>Event
Consumer</span></a><span style='mso-fareast-font-family:"Times New Roman"'><o:p></o:p></span></h3>

<p>An example of a program written to consume events produced by an ET system
is adapted from the file <span class=SpellE><em>et_client.c</em></span>. It
follows below:</p>

<p><span style='font-size:10.0pt;font-family:"Courier New"'>#include &lt;<span
class=SpellE>stdio.h</span>&gt;<br>
#include &lt;<span class=SpellE>stdlib.h</span>&gt;<br>
#include &lt;<span class=SpellE>signal.h</span>&gt;<br>
#include &lt;sys/<span class=SpellE>types.h</span>&gt;<br>
#include &lt;<span class=SpellE>unistd.h</span>&gt;<br>
#include &lt;<span class=SpellE>time.h</span>&gt;<br>
#include &lt;<span class=SpellE>thread.h</span>&gt;<br>
#include &lt;<span class=SpellE>et.h</span>&gt;<br>
&nbsp;<br>
#define NUMEVENTS 500000<br>
#define CHUNK 100<br>
&nbsp;<br>
main(<span class=SpellE>int</span> <span class=SpellE>argc,char</span> **<span
class=SpellE>argv</span>)<br>
{ <br>
<span class=SpellE>int</span> <span class=SpellE>i</span>, j, status, <span
class=SpellE>swtch</span>, <span class=SpellE>numread</span>, <span
class=SpellE>totalread</span>=0;<br>
<span class=SpellE>int</span> con[ET_STATION_SELECT_INTS];<br>
<span class=SpellE>et_statconfig</span> <span class=SpellE>sconfig</span>;<br>
<span class=SpellE>et_openconfig</span> <span class=SpellE>openconfig</span>;<br>
<span class=SpellE>et_event</span>&nbsp;&nbsp; *<span class=SpellE>pe</span>[CHUNK];<br>
<span class=SpellE>et_att_id</span>&nbsp; attach1;<br>
<span class=SpellE>et_stat_id</span> <span class=SpellE>my_stat</span>;<br>
<span class=SpellE>et_sys_id</span>&nbsp; id;<br>
<span class=SpellE>int</span> selections[] = {17,15,-1,-1}; /* 17 &amp; 5 are
arbitrary */<br>
<br>
if(<span class=SpellE>argc</span> != 4) {<br>
&nbsp; <span class=SpellE>printf</span>(&quot;Usage: <span class=SpellE>et_client</span>
&lt;<span class=SpellE>et_filename</span>&gt; &lt;<span class=SpellE>station_name</span>&gt;
&lt;mode&gt;\n&quot;);<br>
&nbsp; exit(1);<br>
}<br>
<br>
<span style='color:red'>/* open local ET system and don't wait for it */</span><br>
<span class=SpellE>et_open_config_init</span>(&amp;<span class=SpellE>openconfig</span>);<br>
if (<span class=SpellE>et_open</span>(&amp;id, <span class=SpellE>argv</span>[1],
<span class=SpellE>openconfig</span>) != ET_OK) {<br>
&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
<span class=SpellE>et_open</span> problems\n&quot;);<br>
&nbsp; exit(1);<br>
}<br>
<span class=SpellE>et_open_config_destroy</span>(<span class=SpellE>openconfig</span>);<br>
<br>
<span style='color:red'>/* User selects which type/mode of station to create -
got 6 choices.<br>
&nbsp;* (Of course, many more combinations of settings are possible.)<br>
&nbsp;*/</span><br>
<span class=SpellE>swtch</span> = <span class=SpellE>atoi</span>(<span
class=SpellE>argv</span>[3]);<br>
<br>
<span style='color:red'>/* set some common values */</span><br>
<span class=SpellE>et_station_config_init</span>(&amp;<span class=SpellE>sconfig</span>);<br>
<span class=SpellE>et_station_config_setuser</span>(<span class=SpellE>sconfig</span>,
ET_STATION_USER_MULTI);<br>
<span class=SpellE>et_station_config_setrestore</span>(<span class=SpellE>sconfig</span>,
ET_STATION_RESTORE_OUT);<br>
<span class=SpellE>et_station_config_setprescale</span>(<span class=SpellE>sconfig</span>,
5);<br>
<span class=SpellE>et_station_config_setcue</span>(<span class=SpellE>sconfig</span>,
20);<br>
&nbsp;<br>
if (<span class=SpellE>swtch</span> == 1) {<br>
&nbsp; <span style='color:red'>/* get everything */</span><br>
&nbsp; <span class=SpellE>et_station_config_setselect</span>(<span
class=SpellE>sconfig</span>, ET_STATION_SELECT_ALL);<br>
&nbsp; <span class=SpellE>et_station_config_setblock</span>(<span class=SpellE>sconfig</span>,
ET_STATION_BLOCKING);<br>
}<br>
else if (<span class=SpellE>swtch</span> == 2) {<br>
&nbsp; <span style='color:red'>/* <span class=SpellE>nonblocking</span> */</span><br>
&nbsp; <span class=SpellE>et_station_config_setselect</span>(<span
class=SpellE>sconfig</span>, ET_STATION_SELECT_ALL);<br>
&nbsp; <span class=SpellE>et_station_config_setblock</span>(<span class=SpellE>sconfig</span>,
ET_STATION_NONBLOCKING);<br>
}<br>
else if (<span class=SpellE>swtch</span> == 3) {<br>
&nbsp; <span style='color:red'>/* select events */</span><br>
&nbsp; <span class=SpellE>et_station_config_setselect</span>(<span
class=SpellE>sconfig</span>, ET_STATION_SELECT_MATCH);<br>
&nbsp; <span class=SpellE>et_station_config_setblock</span>(<span class=SpellE>sconfig</span>,
ET_STATION_BLOCKING);<br>
&nbsp; <span class=SpellE>et_station_config_setselectwords</span>(<span
class=SpellE>sconfig</span>, selections);<br>
}<br>
else if (<span class=SpellE>swtch</span> == 4) {<br>
&nbsp; <span style='color:red'>/* non-blocking, selection */</span><br>
&nbsp; <span class=SpellE>et_station_config_setselect</span>(<span
class=SpellE>sconfig</span>, ET_STATION_SELECT_MATCH);<br>
&nbsp; <span class=SpellE>et_station_config_setblock</span>(<span class=SpellE>sconfig</span>,
ET_STATION_NONBLOCKING);<br>
&nbsp; <span class=SpellE>et_station_config_setselectwords</span>(<span
class=SpellE>sconfig</span>, selections);<br>
}<br>
else if (<span class=SpellE>swtch</span> == 5) {<br>
&nbsp; <span style='color:red'>/* user's condition, blocking mode */</span><br>
&nbsp; <span class=SpellE>et_station_config_setselect</span>(<span
class=SpellE>sconfig</span>, ET_STATION_SELECT_USER);<br>
&nbsp; <span class=SpellE>et_station_config_setblock</span>(<span class=SpellE>sconfig</span>,
ET_STATION_BLOCKING);<br>
&nbsp; <span class=SpellE>et_station_config_setselectwords</span>(<span
class=SpellE>sconfig</span>, selections);<br>
&nbsp; if (<span class=SpellE>et_station_config_setfunction</span>(<span
class=SpellE>sconfig</span>, &quot;<span class=SpellE>et_my_function</span>&quot;)
== ET_ERROR) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
cannot set function\n&quot;);<br>
&nbsp;&nbsp;&nbsp; exit(1);<br>
&nbsp; }<br>
&nbsp; if (<span class=SpellE>et_station_config_setlib</span>(<span
class=SpellE>sconfig</span>, &quot;/.../libet_user.so&quot;) == ET_ERROR) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
cannot set library\n&quot;);<br>
&nbsp;&nbsp;&nbsp; exit(1);<br>
&nbsp; }<br>
}<br>
else if (<span class=SpellE>swtch</span> == 6) {<br>
&nbsp; <span style='color:red'>/* user's condition, <span class=SpellE>nonblocking</span>
mode */</span><br>
&nbsp; <span class=SpellE>et_station_config_setselect</span>(<span
class=SpellE>sconfig</span>, ET_STATION_SELECT_USER);<br>
&nbsp; <span class=SpellE>et_station_config_setblock</span>(<span class=SpellE>sconfig</span>,
ET_STATION_NONBLOCKING);<br>
&nbsp; <span class=SpellE>et_station_config_setselectwords</span>(<span
class=SpellE>sconfig</span>, selections);<br>
&nbsp; if (<span class=SpellE>et_station_config_setfunction</span>(<span
class=SpellE>sconfig</span>, &quot;<span class=SpellE>et_my_function</span>&quot;)
== ET_ERROR) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
cannot set function\n&quot;);<br>
&nbsp;&nbsp;&nbsp; exit(1);<br>
&nbsp; }<br>
&nbsp; if (<span class=SpellE>et_station_config_setlib</span>(<span
class=SpellE>sconfig</span>, &quot;/.../libet_user.so&quot;) == ET_ERROR) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
cannot set library\n&quot;);<br>
&nbsp;&nbsp;&nbsp; exit(1);<br>
&nbsp; }<br>
}<br>
<br>
<span style='color:red'>/* set level of debug output */</span><br>
<span class=SpellE>et_system_setdebug</span>(id, ET_DEBUG_INFO);<br>
<br>
<span style='color:red'>/* create the station */</span><br>
if ((status = <span class=SpellE>et_station_create</span>(id, &amp;<span
class=SpellE>my_stat</span>, <span class=SpellE>argv</span>[2], <span
class=SpellE>sconfig</span>)) &lt; ET_OK) {<br>
&nbsp; if (status == ET_ERROR_EXISTS) {<br>
&nbsp;&nbsp;&nbsp; <span style='color:red'>/* <span class=SpellE>my_stat</span>
contains pointer to existing station */</span><br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
station already exists\n&quot;);<br>
&nbsp; }<br>
&nbsp; else if (status == ET_ERROR_TOOMANY) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
too many stations created\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> error;<br>
&nbsp; }<br>
&nbsp; else {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
error in station creation\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> error;<br>
&nbsp; }<br>
}<br>
<span class=SpellE>et_station_config_destroy</span>(<span class=SpellE>sconfig</span>);<br>
<br>
<span style='color:red'>/* attach to the newly created station */</span><br>
if (<span class=SpellE>et_station_attach</span>(id, <span class=SpellE>my_stat</span>,
&amp;attach1) &lt; 0) {<br>
&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
error in station attach\n&quot;);<br>
&nbsp; <span class=SpellE>goto</span> error;<br>
}<br>
<br>
<span style='color:red'>/* loop, while ET system is alive, to read and write
events */</span><br>
while (<span class=SpellE>et_alive</span>(id)) {<br>
&nbsp; <span style='color:red'>/* example of reading array of up to
&quot;CHUNK&quot; events */</span><br>
&nbsp; status = <span class=SpellE>et_events_get</span>(id, attach1, <span
class=SpellE>pe</span>, ET_SLEEP, NULL, CHUNK, &amp;<span class=SpellE>numread</span>);<br>
&nbsp; if (status == ET_OK) {<br>
&nbsp;&nbsp;&nbsp; <span style='color:red'>/* everything is OK*/</span><br>
&nbsp; }<br>
&nbsp; else if (status == ET_ERROR_DEAD) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
ET is dead\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> end;<br>
&nbsp; }<br>
&nbsp; else if (status == ET_ERROR_TIMEOUT) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
got timeout\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> end;<br>
&nbsp; }<br>
&nbsp; else if (status == ET_ERROR_EMPTY) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
no events\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> end;<br>
&nbsp; }<br>
&nbsp; else if (status == ET_ERROR_BUSY) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
station is busy\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> end;<br>
&nbsp; }<br>
&nbsp;&nbsp;else if (status == ET_ERROR_WAKEUP) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_client</span>: someone told me to wake up\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> end;<br>
&nbsp;&nbsp;}<br>
&nbsp; else if (status != ET_OK) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
get error\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> error;<br>
&nbsp; }<br>
&nbsp;<br>
&nbsp; <span style='color:red'>/* print data */</span><br>
&nbsp; if (0) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>int</span> <span class=SpellE>pri</span>,
<span class=SpellE>len</span>, *data;<br>
&nbsp;&nbsp;&nbsp; for (j=0; j &lt; <span class=SpellE>numread</span>; j++) {<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>et_event_getdata</span>(<span
class=SpellE>pe</span>[j], (void **) &amp;data);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>et_event_getpriority</span>(<span
class=SpellE>pe</span>[j], &amp;<span class=SpellE>pri</span>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>et_event_getlength</span>(<span
class=SpellE>pe</span>[j], &amp;<span class=SpellE>len</span>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>et_event_getcontrol</span>(<span
class=SpellE>pe</span>[j], con);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span
class=SpellE>et_client</span> data = %d, <span class=SpellE>pri</span> = %d, <span
class=SpellE>len</span> = %d\n&quot;, *data, <span class=SpellE>pri</span>, <span
class=SpellE>len</span>); <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (<span class=SpellE>i</span>=0; <span
class=SpellE>i</span> &lt; ET_STATION_SELECT_INTS; <span class=SpellE>i</span>++)
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;
con[%d] = %d\n&quot;, <span class=SpellE>i</span>, con[<span class=SpellE>i</span>]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp; }<br>
<br>
&nbsp; <span style='color:red'>/* putting array of events */</span><br>
&nbsp; status = <span class=SpellE>et_events_put</span>(id, attach1, <span
class=SpellE>pe</span>, <span class=SpellE>numread</span>);<br>
&nbsp; if (status == ET_ERROR_DEAD) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
ET is dead\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> end;<br>
&nbsp; }<br>
&nbsp; else if (status != ET_OK) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
put error\n&quot;);<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>goto</span> error;<br>
&nbsp; }<br>
&nbsp; <span class=SpellE>totalread</span> += <span class=SpellE>numread</span>;<br>
<br>
end:<br>
&nbsp; <span style='color:red'>/* print something out after having read
NUMEVENTS events */</span><br>
&nbsp; if (<span class=SpellE>totalread</span> &gt;= NUMEVENTS) {<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>totalread</span> = 0;<br>
&nbsp;&nbsp;&nbsp; <span class=SpellE>printf</span>(&quot; <span class=SpellE>et_client</span>:
%d events\n&quot;, NUMEVENTS);<br>
&nbsp; }<br>
<br>
} <span style='color:red'>/* while(alive) */</span><br>
<br>
error:<br>
free(<span class=SpellE>pe</span>);<br>
<span class=SpellE>printf</span>(&quot;<span class=SpellE>et_client</span>:
ERROR\n&quot;);<br>
exit(0);<br>
}<o:p></o:p></span></p>

<p><a href="programming_details.htm" target="_self"><span style='mso-no-proof:
yes;text-decoration:none;text-underline:none'><img border=0 width=31 height=31
id="_x0000_i1026" src=left.gif alt=Previous></span></a><a
href="modifying_system.htm" target="_self"><span style='mso-no-proof:yes;
text-decoration:none;text-underline:none'><img border=0 width=31 height=31
id="_x0000_i1025" src=right.gif alt=Next></span></a></p>

</div>

</body>

</html>
